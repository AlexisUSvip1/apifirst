openapi: 3.1.1
info:
  version: "1.0"
  title: Fake API Store
  description: |-
    This is a sample FakeAPI Store Server based on the OpenAPI 3.X specification. You can find out more about Swagger at https://swagger.io. In the third iteration of the pet store, we've switched to the design first approach. You can now help us improve the API whether it's by making changes to the definition itself or to the code. That way, with time, we can improve the API in general, and expose some of the new features in OAS3.
    
    Some useful links:
    - [The Fake Store repository](https://github.com/platzi/curso-apifirst)
  termsOfService: https://fakeapi.example.com/terms/
  contact:
    name: API Support
    url: https://fakeapi.example.com/support
    email: support@fakeapi.example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:3000/v1
    description:  Version 1 de la AppFirst
  - url: http://localhost:3000/v2
    description:  Version 2 de la AppFirst
tags:
  - name: hello
    description: Operaciones de saludo
    externalDocs:
      description: Más sobre hello
      url: https://fakeapi.example.com/docs/hello
  - name: users
    description: Operaciones de usuarios
    externalDocs:
      description: Más sobre usuarios
      url: https://fakeapi.example.com/docs/users
  - name: products
    description: Operaciones de productos
    externalDocs:
      description: Más sobre productos
      url: https://fakeapi.example.com/docs/products
externalDocs:
  description: Documentación completa de la Fake API Store
  url: https://fakeapi.example.com/docs

components:
  schemas:
    HelloResponse:
      type: object
      example:
        message: "Hello, World!"
    # --- Product Schema ---
    Product:
      type: object
      required:
        - name
        - price
        - category
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 40
          description: Nombre del producto
          example: "Smartphone Samsung Galaxy S23 Ultra"
        description:
          type: string
          maxLength: 500
          description: Descripción detallada del producto
          example: "Smartphone de alta gama con pantalla AMOLED de 6.8 pulgadas, 256GB de almacenamiento, cámara cuádruple de 200MP y batería de 5000mAh."
        price:
          type: number
          minimum: 0
          multipleOf: 0.01
          description: Precio del producto en USD
          example: 1199.99
        category: 
          type: string
          enum: [electronics, books, clothes, food]
          description: Categoría del producto
          example: "electronics"
        tags: 
          type: array
          items: 
            type: string
            minLength: 1
            example: "smartphone"
          description: Etiquetas asociadas al producto
          example: ["smartphone", "android", "samsung"]
        inStock: 
          type: boolean
          description: Indica si el producto está en stock
          example: true
        specifications: 
          type: object
          additionalProperties:
            type: string
          description: Especificaciones técnicas del producto
          example:
            Pantalla: "6.8 pulgadas AMOLED"
            Almacenamiento: "256GB"
            RAM: "12GB"
            Bateria: "5000mAh"
        ratings: 
          type: object
          items: 
            required:
              - score
              - comment
            properties:
              score: 
                type: integer
                minimum: 1
                maximum: 5
                description: Calificación del producto
                example: 5
              comment:
                type: string
                maxLength: 500
                description: Comentario del usuario sobre el producto
                example: "Excelente calidad de cámara y duración de batería. Muy recomendado."

# ===================== PATHS =====================
paths:
  # --- Hello Endpoints ---
  /hello:
    get:
      tags:
        - hello
      summary: hello world
      responses:
        '200':
          description: Respuesta completa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloResponse'

  # --- Users Endpoints ---
  /users:
    post:
      tags:
        - users
      summary: Crear un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              type: object
              required:
                - name
                - age
                - email
              properties:
                name:
                  type: string
                  minLength: 2
                age: 
                  type: integer
                  minimum: 18
                email: 
                  type: string
                  format: email
      responses:
        '201': 
          description: Usuario creado
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  id:
                    type: string
                  name: 
                    type: string
                  age: 
                    type: integer
                  email:
                    type: string
  /users/{id}:
    get:
      tags:
        - users
      summary: Obtener un usuario por ID
      parameters:
        - in: path
          name: id
          required: true
          schema: 
            type: integer
      responses:
        '200': 
          description: Usuario Encontrado
          content: 
            application/json:
              schema: 
                type: object
                properties:
                  id: 
                    type: integer
                  name: 
                    type: string
        '404':
          description: Usuario no Encontrado
          content: 
            application/json:
              schema: 
                type: object
                properties:
                  message:
                    type: string
    put:
      tags:
        - users
      summary: Actualizar el nombre del usuario
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - age
                - email
              properties:
                name:
                  type: string
                  minLength: 2
                email: 
                  type: string
                  format: email
                age: 
                  type: integer
                  minimum: 18
      responses:
        '200':
          description: Usuario actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  age: 
                    type: string
                  email:
                    type: string
        '400':
          description: Error en los datos enviados
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      tags:
        - users
      summary: Eliminar usuario por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Usuario eliminado
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  # --- Products Endpoints ---
  /products:
    post:
      tags:
        - products
      summary: Crear un nuevo producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Producto creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    get:
      tags:
        - products
      summary: Listar productos
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /products/{id}:
    get:
      tags:
        - products
      summary: Obtener producto por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      tags:
        - products
      summary: Actualizar producto por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Producto actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      tags:
        - products
      summary: Eliminar producto por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Producto eliminado
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string